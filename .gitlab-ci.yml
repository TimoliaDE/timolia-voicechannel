stages:
  - build
  - deploy

variables:
  IMAGE_NAME: voicechannelbot

build_dev:
  image: docker:stable
  stage: build
  tags:
    - docker
  script:
    - docker info
    - docker login -u=$DOCKER_USERNAME -p=$DOCKER_PASSWORD $DOCKER_REGISTRY
    - docker build --cache-from $DOCKER_REGISTRY/discord/$IMAGE_NAME:dev -t $DOCKER_REGISTRY/discord/$IMAGE_NAME:dev -t $DOCKER_REGISTRY/discord/$IMAGE_NAME:$CI_PIPELINE_ID .
    - docker push $DOCKER_REGISTRY/discord/$IMAGE_NAME:dev
    - docker push $DOCKER_REGISTRY/discord/$IMAGE_NAME:$CI_PIPELINE_ID
  except:
    - main

build_live:
  image: docker:stable
  stage: build
  tags:
    - docker
  script:
    - docker info
    - docker login -u=$DOCKER_USERNAME -p=$DOCKER_PASSWORD $DOCKER_REGISTRY
    - docker build --cache-from $DOCKER_REGISTRY/discord/$IMAGE_NAME -t $DOCKER_REGISTRY/discord/$IMAGE_NAME:$CI_COMMIT_REF_NAME -t $DOCKER_REGISTRY/discord/$IMAGE_NAME:$CI_PIPELINE_ID .
    - docker push $DOCKER_REGISTRY/discord/$IMAGE_NAME:$CI_COMMIT_REF_NAME
    - docker push $DOCKER_REGISTRY/discord/$IMAGE_NAME:$CI_PIPELINE_ID
  only:
    - main

deploy_dev:
  stage: deploy
  image: dtzar/helm-kubectl
  tags:
    - docker
  variables:
    DEPLOY_ENV: dev
    IMAGE_NAME: voicechannelbot
    SERVICE_NAME: voicechannelbot-dev
  script:
    - bash deploy.sh
  except:
    - main

deploy_live:
  stage: deploy
  image: dtzar/helm-kubectl
  tags:
    - docker
  variables:
    DEPLOY_ENV: live
    IMAGE_NAME: voicechannelbot
    SERVICE_NAME: voicechannelbot-live
  script:
    - bash deploy.sh
  only:
    - mainr